{"version":3,"sources":["components/Section.js","services/contacts-api.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-selectors.js","redux/contacts/contacts-actions.js","components/ContactListItem.js","components/ContactList.js","components/ContactForm.js","components/Filter.js","App.js","redux/contacts/contacts-reducers.js","redux/store.js","index.js"],"names":["Section","title","children","BASE_URL","fetchContacts","a","axios","get","data","fetchAddContact","item","post","fetchDeleteContact","id","delete","fetchContact","dispatch","contactsActions","fetchContactRequest","contactsAPI","fetchContactSuccess","fetchContactError","addContact","addContactRequest","addContactSuccess","addContactError","deleteContact","console","log","deleteContactRequest","deleteContactSuccess","deleteContactError","filterContact","name","filterContactRequest","filterContactSuccess","error","filterContactError","getContacts","state","contacts","getFilter","filter","getLoader","loading","createAction","ContactList","number","useDispatch","type","onClick","contactsOperations","onDelete","useSelector","contactsSelectors","loader","useEffect","filteredContacts","useMemo","normalizedFilter","toLowerCase","contact","includes","map","length","ContactForm","useState","setName","setNumber","handleChange","e","target","value","formSubmitHandler","normalizedName","find","el","alert","nameId","uuidv4","telId","onSubmit","preventDefault","htmlFor","pattern","required","onChange","Component","changeFilter","useCallback","App","createReducer","_","action","payload","contactReducer","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.be24b253.chunk.js","sourcesContent":["export default function Section({ title, children }) {\n  return (\n    <section>\n      <h2>{title}</h2>\n      {children}\n    </section>\n  );\n}\n","import axios from 'axios';\n\nconst BASE_URL = 'https://6196d384af46280017e7e2d4.mockapi.io/contacts';\n\n// async function FetchWithErrorHandling(url = '') {\n//     try {\n//       const response = await fetch(url);\n//       const data = await response.json();\n//       return data;\n//     } catch (err) {\n//       return console.log(err.message);\n//     }\n\nexport async function fetchContacts() {\n  const { data } = await axios.get(`${BASE_URL}`);\n  return data;\n}\n\nexport async function fetchAddContact(item) {\n  const { data } = await axios.post(`${BASE_URL}`, item);\n  return data;\n}\n\nexport async function fetchDeleteContact(id) {\n  const { data } = await axios.delete(`${BASE_URL}/${id}`);\n  return data;\n}\n","// import { createAsyncThunk } from '@reduxjs/toolkit';\nimport { contactsActions } from '.';\nimport { contactsAPI } from 'services';\n\nexport const fetchContact = () => async dispatch => {\n  dispatch(contactsActions.fetchContactRequest());\n  try {\n    const data = await contactsAPI.fetchContacts();\n    dispatch(contactsActions.fetchContactSuccess(data));\n  } catch (error) {\n    dispatch(contactsActions.fetchContactError(error));\n  }\n};\n\n// export const fetchContact = createAsyncThunk(\n//   'contacts/fetchContact',\n//   async () => {\n//     const data = await contactsAPI.fetchContacts();\n//     return data;\n//   },\n// );\n\nexport const addContact = item => async dispatch => {\n  dispatch(contactsActions.addContactRequest());\n  try {\n    const data = await contactsAPI.fetchAddContact(item);\n    dispatch(contactsActions.addContactSuccess(data));\n  } catch (error) {\n    dispatch(contactsActions.addContactError(error));\n  }\n};\n\nexport const deleteContact = id => async dispatch => {\n  console.log('id: ', id);\n  dispatch(contactsActions.deleteContactRequest());\n  try {\n    const data = await contactsAPI.fetchDeleteContact(id);\n    console.log('data in Del :', data);\n    dispatch(contactsActions.deleteContactSuccess(id));\n  } catch (error) {\n    dispatch(contactsActions.deleteContactError(error));\n  }\n};\n\nexport const filterContact = name => dispatch => {\n  dispatch(contactsActions.filterContactRequest());\n  try {\n    dispatch(contactsActions.filterContactSuccess(name));\n  } catch (error) {\n    dispatch(contactsActions.filterContactError(error));\n  }\n};\n","export const getContacts = state => state.contacts;\nexport const getFilter = state => state.filter;\nexport const getLoader = state => state.loading;\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactRequest = createAction('contacts/fetchContactRequest');\nexport const fetchContactSuccess = createAction('contacts/fetchContactSuccess');\nexport const fetchContactError = createAction('contacts/fetchContactError');\n\nexport const addContactRequest = createAction('contacts/addContactRequest');\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\nexport const addContactError = createAction('contacts/addContactError');\n\nexport const deleteContactRequest = createAction(\n  'contacts/deleteContactRequest',\n);\nexport const deleteContactSuccess = createAction(\n  'contacts/deleteContactSuccess',\n);\nexport const deleteContactError = createAction('contacts/deleteContactError');\n\nexport const filterContactRequest = createAction(\n  'contacts/filterContactRequest',\n);\nexport const filterContactSuccess = createAction(\n  'contacts/filterContactSuccess',\n);\nexport const filterContactError = createAction('contacts/filterContactError');\n","import { useDispatch } from 'react-redux';\nimport { contactsOperations } from 'redux/contacts';\n\nexport default function ContactList({ id, name, number }) {\n  const dispatch = useDispatch();\n\n  const onDelete = id => dispatch(contactsOperations.deleteContact(id));\n\n  return (\n    <li>\n      <span>{name}:</span>\n      <span>{number}</span>\n      <button\n        type=\"button\"\n        id={id}\n        onClick={() => {\n          onDelete(id);\n        }}\n      >\n        Delete\n      </button>\n    </li>\n  );\n}\n","import { useEffect, useMemo } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { contactsSelectors, contactsOperations } from 'redux/contacts';\nimport ContactListItem from './ContactListItem';\n\nexport default function ContactList() {\n  const contacts = useSelector(contactsSelectors.getContacts);\n  const filter = useSelector(contactsSelectors.getFilter);\n  const loader = useSelector(contactsSelectors.getLoader);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    return dispatch(contactsOperations.fetchContact());\n  }, [dispatch]);\n\n  const filteredContacts = useMemo(() => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  }, [filter, contacts]);\n\n  return (\n    <>\n      {loader && <h1>Loading...</h1>}\n      <ul>\n        {!loader &&\n          filteredContacts.map(({ id, name, number }) => (\n            <ContactListItem key={id} id={id} name={name} number={number} />\n          ))}\n      </ul>\n      {filteredContacts.length === 0 && !loader && (\n        <h1>There are no contacts in phonebook!</h1>\n      )}\n    </>\n  );\n}\n","import { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { v4 as uuidv4 } from 'uuid';\nimport { getContacts } from 'redux/contacts/contacts-selectors';\nimport { contactsOperations } from 'redux/contacts';\n\nexport default function ContactForm() {\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  useEffect(() => {\n    return dispatch(contactsOperations.fetchContact());\n  }, [dispatch]);\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    formSubmitHandler({ name, number });\n    setName('');\n    setNumber('');\n  };\n\n  const formSubmitHandler = item => {\n    const normalizedName = item.name.toLowerCase();\n    contacts.find(el => {\n      return el.name.toLowerCase() === normalizedName;\n    })\n      ? alert(`${item.name} is already in contacts`)\n      : dispatch(contactsOperations.addContact(item));\n  };\n\n  const nameId = uuidv4();\n  const telId = uuidv4();\n  return (\n    <form onSubmit={handleSubmit}>\n      <label htmlFor={nameId}>Name</label>\n      <input\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        required\n        value={name}\n        id={nameId}\n        onChange={handleChange}\n      />\n      <label htmlFor={telId}>Number</label>\n      <input\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n        required\n        value={number}\n        id={telId}\n        onChange={handleChange}\n      />\n      <button type=\"submit\">Add contact</button>\n    </form>\n  );\n}\n\nContactForm.propTypes = {\n  state: PropTypes.objectOf(PropTypes.string),\n};\n","import { v4 as uuidv4 } from 'uuid';\nimport { useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { contactsSelectors, contactsOperations } from 'redux/contacts';\n\nexport default function Component() {\n  const filter = useSelector(contactsSelectors.getFilter);\n  const dispatch = useDispatch();\n  const changeFilter = useCallback(\n    e => {\n      dispatch(contactsOperations.filterContact(e.target.value));\n    },\n    [dispatch],\n  );\n\n  return (\n    <div>\n      <label htmlFor={uuidv4()}>Find contacts by name</label>\n      <input type=\"text\" value={filter} id={uuidv4()} onChange={changeFilter} />\n    </div>\n  );\n}\n","import './App.css';\nimport Section from './components/Section';\nimport ContactList from './components/ContactList';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\n\nexport default function App() {\n  return (\n    <div>\n      <Section title=\"Phonebook\">\n        <ContactForm />\n      </Section>\n      <Section title=\"Contacts\">\n        <Filter />\n        <ContactList />\n      </Section>\n    </div>\n  );\n}\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport { contactsActions } from '.';\n\nconst contacts = createReducer([], {\n  [contactsActions.fetchContactSuccess]: (_, action) => action.payload,\n  [contactsActions.addContactSuccess]: (state, action) => [\n    ...state,\n    action.payload,\n  ],\n  [contactsActions.deleteContactSuccess]: (state, action) =>\n    state.filter(contact => contact.id !== action.payload),\n});\n\nconst filter = createReducer('', {\n  [contactsActions.filterContactSuccess]: (_, action) => action.payload,\n});\n\nconst loading = createReducer(false, {\n  [contactsActions.fetchContactRequest]: () => true,\n  [contactsActions.fetchContactSuccess]: () => false,\n  [contactsActions.fetchContactError]: () => false,\n  [contactsActions.addContactRequest]: () => true,\n  [contactsActions.addContactSuccess]: () => false,\n  [contactsActions.addContactError]: () => false,\n  [contactsActions.deleteContactRequest]: () => true,\n  [contactsActions.deleteContactSuccess]: () => false,\n  [contactsActions.deleteContactError]: () => false,\n  [contactsActions.filterContactRequest]: () => true,\n  [contactsActions.filterContactSuccess]: () => false,\n  [contactsActions.filterContactError]: () => false,\n});\n\nconst error = createReducer(null, {\n  [contactsActions.fetchContactError]: (_, action) => action.payload,\n  [contactsActions.fetchContactRequest]: () => null,\n  [contactsActions.addContactError]: (_, action) => action.payload,\n  [contactsActions.addContactRequest]: () => null,\n  [contactsActions.deleteContactError]: (_, action) => action.payload,\n  [contactsActions.deleteContactRequest]: () => null,\n  [contactsActions.filterContactError]: (_, action) => action.payload,\n  [contactsActions.filterContactRequest]: () => null,\n});\n\nexport const contactReducer = combineReducers({\n  contacts,\n  filter,\n  loading,\n  error,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport { contactReducer } from './contacts/contacts-reducers';\nimport {\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport logger from 'redux-logger';\n\n//  --- EXAMPLE WITH CUSTOM MIDLEWARE ---\n// const myMiddleware = store => next => action => {\n//   console.log('My midleware!', action);\n//   next(action);\n// };\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  // myMiddleware,\n  logger,\n];\n\nexport const store = configureStore({\n  reducer: contactReducer,\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\nimport { store } from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}